openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/score4more-system/score4more-internal/1.0.0
info:
  version: "1.0.0"
  title: PlanMe API

paths:
  /healthcheck:
    get:
      summary: Check if server is up
      tags:
        - session
      responses:
        '200':
          description: OK
  /login:
    post:
      summary: Login and get session key
      tags:
        - session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionToken:
                    type: string

        '400':
          description: Errors field contains technical errors e.g. database errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    minItems: 1
                    items:
                      type: string
  
  
  /logout:
    post:
      summary: Logout action
      tags:
        - session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionToken:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
  
  
  /events:
    get:
      summary: Get events from table
      tags:
        - plans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                startDate:
                  type: string
                  example: "2015-01-27T05:57:31.399861+00:00"
                endDate:
                  type: string
                  example: "2015-01-27T05:57:31.399861+00:00"

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                    date:
                      type: string
                      example: "2015-01-27T05:57:31.399861+00:00"
                    participants:
                      type: string
                    category:
                      type: string
                      enum: [ home, work, relationships, education, health, sport, entertainment ]
                    status:
                      type: string
                      enum: [null, done, fail]
    post:
      summary: Create event
      tags:
        - plans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                endDate:
                  type: string
                name:
                  type: string
                participants:
                  type: string
                repeat:
                  type: string
                  enum: [ null, everyday, weekly, twice_a_minth, monthly, yearly ]
                category:
                  type: string
                  enum: [ home, work, relationships, education, health, sport, entertainment ]
                status:
                  type: string
                  enum: [null, done, fail]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                    date:
                      type: string
                      example: "2015-01-27T05:57:31.399861+00:00"
                    participants:
                      type: string
                    category:
                      type: string
                      enum: [ home, work, relationships, education, health, sport, entertainment ]
                    status:
                      type: string
                      enum: [null, done, fail]
        
        '400':
          description: Errors field contains technical errors e.g. database errors
          content:
            application/json:
              schema:
                type: string
                example: Error text

    delete:
      summary: Delete event from table
      tags:
        - plans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                startDate:
                  type: string
                  example: "2015-01-27T05:57:31.399861+00:00"
                endDate:
                  type: string
                  example: "2015-01-27T05:57:31.399861+00:00"

      responses:
        '204':
          description: OK
  
    patch:
      summary: Updates event
      tags:
        - plans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                  example: "2015-01-27T05:57:31.399861+00:00"
                endDate:
                  type: string
                  example: "2015-01-27T05:57:31.399861+00:00"
                startDateNew:
                  type: string
                  example: "2015-01-27T05:57:31.399861+00:00"
                endDateNew:
                  type: string
                  example: "2015-01-27T05:57:31.399861+00:00"
                name:
                  type: string
                participants:
                  type: string
                category:
                  type: string
                  enum: [ home, work, relationships, education, health, sport, entertainment ]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                    date:
                      type: string
                      example: "2015-01-27T05:57:31.399861+00:00"
                    participants:
                      type: string
                    category:
                      type: string
                      enum: [ home, work, relationships, education, health, sport, entertainment ]
                    status:
                      type: string
                      enum: [ null, done, fail ]

        '400':
          description: Errors field contains technical errors e.g. database errors
          content:
            application/json:
              schema:
                type: string
                example: Error text
